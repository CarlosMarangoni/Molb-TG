@startuml

title __DTO's Class Diagram__\n

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.CommentForm {
              - description : String
              - stars : Integer
              + CommentForm()
              + CommentForm()
              + equals()
              + getDescription()
              + getStars()
              + hashCode()
              + setDescription()
              + setStars()
              {static} + toForm()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.CommentOutput {
              - description : String
              - stars : Integer
              - user : String
              + CommentOutput()
              + CommentOutput()
              + equals()
              + getDescription()
              + getStars()
              + getUser()
              + hashCode()
              + setDescription()
              + setStars()
              + setUser()
              {static} + toOutput()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.FollowerOutput {
              - name : String
              - user : String
              + FollowerOutput()
              + FollowerOutput()
              + equals()
              + getName()
              + getUser()
              + hashCode()
              + setName()
              + setUser()
              {static} + toOutput()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.LikeOutput {
              - user : String
              + LikeOutput()
              + LikeOutput()
              + equals()
              + getUser()
              + hashCode()
              + setUser()
              {static} + toOutput()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.LoginForm {
              - email : String
              - name : String
              - password : String
              - username : String
              + LoginForm()
              + LoginForm()
              + equals()
              + getEmail()
              + getName()
              + getPassword()
              + getUsername()
              + hashCode()
              + setEmail()
              + setName()
              + setPassword()
              + setUsername()
              {static} + toForm()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.PostForm {
              - description : String
              - items : List<SaleItemForm>
              - price : BigDecimal
              + PostForm()
              + PostForm()
              + equals()
              + getDescription()
              + getItems()
              + getPrice()
              + hashCode()
              + setDescription()
              + setItems()
              + setPrice()
              {static} + toForm()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.PostOutput {
              - comments : List<CommentOutput>
              - createdAt : OffsetDateTime
              - description : String
              - items : List<SaleItemForm>
              - likes : List<LikeOutput>
              - postImage : String
              - price : BigDecimal
              - user : String
              + PostOutput()
              + PostOutput()
              + equals()
              + getComments()
              + getCreatedAt()
              + getDescription()
              + getItems()
              + getLikes()
              + getPostImage()
              + getPrice()
              + getUser()
              + hashCode()
              + setComments()
              + setCreatedAt()
              + setDescription()
              + setItems()
              + setLikes()
              + setPostImage()
              + setPrice()
              + setUser()
              {static} + toOutput()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.PostSummary {
              - commentAmount : Integer
              - createdAt : OffsetDateTime
              - description : String
              - likeAmount : Integer
              - postImage : String
              - price : BigDecimal
              - user : String
              + PostSummary()
              + PostSummary()
              + equals()
              + getCommentAmount()
              + getCreatedAt()
              + getDescription()
              + getLikeAmount()
              + getPostImage()
              + getPrice()
              + getUser()
              + hashCode()
              + setCommentAmount()
              + setCreatedAt()
              + setDescription()
              + setLikeAmount()
              + setPostImage()
              + setPrice()
              + setUser()
              + toString()
              {static} + toSummary()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.SaleItemForm {
              - description : String
              + SaleItemForm()
              + SaleItemForm()
              + equals()
              + getDescription()
              + hashCode()
              + setDescription()
              {static} + toForm()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace om.carlos.costura {
      namespace domain.model {
        namespace dto {
          class com.carlos.costura.domain.model.dto.UserOutput {
              - followers : List<FollowerOutput>
              - following : List<FollowerOutput>
              - name : String
              - posts : List<PostSummary>
              - user : String
              + UserOutput()
              + UserOutput()
              + equals()
              + getFollowers()
              + getFollowing()
              + getName()
              + getPosts()
              + getUser()
              + hashCode()
              + setFollowers()
              + setFollowing()
              + setName()
              + setPosts()
              + setUser()
              {static} + toOutput()
              + toString()
              # canEqual()
          }
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
